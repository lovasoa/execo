============================================
Readme / documentation for the execo package
============================================

Execo offers a Python API for local or remote, standalone or parallel,
processes execution. It is especially well suited for scripting
workflows of parallel/distributed operations on local or remote hosts:
conducting experiments, performing automated tests, etc. The core
python module is ``execo``. The ``execo_g5k`` python module provides a
set of tools and extensions to execo, to be used in Grid5000

installation instructions
=========================

links
-----

execo project page on INRIA Forge: http://gforge.inria.fr/projects/execo/

execo home page on INRIA Forge: http://execo.gforge.inria.fr

execo package download: http://execo.gforge.inria.fr/downloads or https://gforge.inria.fr/frs/?group_id=2901

execo code repository: git://scm.gforge.inria.fr/execo/execo.git

execo documentation:
http://execo.gforge.inria.fr/doc/
http://execo.gforge.inria.fr/epydoc/

prerequisites
-------------

execo installation requires python (>= 2.5) and make (for debian 5.x,
packages python, make)

to build the documentation, sphinx is needed (for debian
5.x, packages python-sphinx)

installation
------------

use the supplied makefile.

main targets are:

- build: to compile py files.

- install: to install. Pass option PREFIX=... for installing in a
  non-default location (default PREFIX is /usr/local).

- doc: to build doc

- check: to run unittests and doctests

- clean: to clean everything

- dist: to create the execo package in dist/

- epydoc: another generated documentation (requires python-epydoc
  package)

usage
=====

See html documentation for module execo and execo_g5k at
http://execo.gforge.inria.fr/doc/
